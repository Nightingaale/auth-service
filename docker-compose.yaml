services:
  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:latest
    restart: unless-stopped
    env_file:
      - .env-example
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_LISTENER_PORT: "2181"
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "2181:2181"
    networks:
      - auth_network

  kafka:
    container_name: kafka
    image: bitnami/kafka:3.3.2 # Used old version of Kafka to stabilize work with Zookeeper
    restart: unless-stopped
    env_file:
      - .env-example
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://:29092,EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENER_NAMES: INTERNAL,EXTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - auth_network

  postgres:
    container_name: postgres
    image: postgres:latest
    restart: unless-stopped
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=example
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - auth_network

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:26.1.0
    restart: unless-stopped
    environment:
      - KC_DB=postgres
      - KC_DB_URL_HOST=postgres
      - KC_DB_URL_DATABASE=postgres
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=example
      - KC_HOSTNAME=localhost
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=secret
    ports:
      - "8080:8080"
    command: start-dev
    depends_on:
      - redis
      - postgres
    networks:
      - auth_network

  redis:
    container_name: redis
    image: redis:latest
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data/cache
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - auth_network

volumes:
  pg_data:
    driver: local
  redis_data:
    driver: local
  kafka_data:
    driver: local

networks:
  auth_network:
    driver: bridge