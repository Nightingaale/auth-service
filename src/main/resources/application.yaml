server:
  port: 8090

springdoc:
  swagger-ui:
    path: /swagger-ui.html

spring:
  application:
    name: auth-service

  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://keycloak:8080/realms/auth-service/protocol/openid-connect/certs
          issuer-uri: http://keycloak:8080/realms/auth-service

  threads:
    virtual:
      enabled: true

    cloud:
      gateway:
        server:
          webflux:
            discovery:
              locator:
                lower-case-service-id: true
                enabled: true

  data:
    redis:
      host: redis
      port: 6379

  kafka:
    bootstrap-servers: kafka:9092

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    open-in-view: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${POSTGRESQL.URL}
    username: ${POSTGRESQL.USERNAME}
    password: ${POSTGRESQL.PASSWORD}

keycloak:
  jwks-certs: http://keycloak:8080/realms/auth-service/protocol/openid-connect/certs
  realm: auth-service
  auth-server-url: http://keycloak:8080
  resource: auth-service
  credentials:
    client-id: auth-service
    secret: 5WCIbESoW9zBU4aOIoJyWg4UsLPf9RTC
  use-resource-role-mappings: true

logging:
  level:
    org.hibernate: WARN

management:
  endpoints:
    web:
      exposure:
        include: prometheus